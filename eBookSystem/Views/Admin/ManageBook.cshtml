@model eBookSystem.Models.BookViewModel

@{
    ViewData["Title"] = "Manage Books";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - eBookSystem</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/eBookSystem.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/admin/book.css" asp-append-version="true" />
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            width: 100%;
            color: white;
        }

        h1 {
            margin-bottom: 20px;
        }

        .manage-books-main {
            padding-left: 30px;
        }

        .manage-books-main h1 {
            margin-left: -40px;
            margin-bottom: 50px;
        }

        .container {
            display: flex;
            flex-wrap: wrap;
        }

        .alert {
            background-color: #33414a;
            border: none;
            color: white;
            margin-bottom: 20px;
        }

        .sidebar {
            width: 200px;
            margin-right: 0px;
            padding: 20px;
            background-color: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            color: white;
        }

        .content {
            flex: 1;
        }

        .table-container {
            background-color: #c4c4c4;
            padding: 20px;
            width: 150%;
            overflow: hidden;
            margin-left: -40px;
        }

        table.modernTable {
            width: 100%;
            border-collapse: collapse;
            background-color: #ffffff;
            color: #000000;
            overflow: hidden;
        }

            table.modernTable th {
                background-color: #ffffff;
                padding: 12px;
                border-bottom: 1px solid #ffffff;
                cursor: pointer;
            }

                table.modernTable th.sortable:after {
                    content: " \25B2"; /* up arrow */
                    font-size: 0.8em;
                    color: #000000;
                    padding-left: 5px;
                }

                table.modernTable th.sortable.desc:after {
                    content: " \25BC"; /* down arrow */
                }

            table.modernTable td {
                padding: 12px;
                border-bottom: 1px solid #ffffff;
            }



        .btn-primary, .btn-danger {
            background-color: #000000;
            border: none;
            width: 24px;
            height: 24px;
            margin-bottom: 14px;
            transition: background-color 0.3s;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .btn-primary:hover, .btn-danger:hover {
                background-color: #36454F;
            }

        .btn-danger {
            background-color: #ee0062;
        }

            .btn-danger:hover {
                background-color: #b30037;
            }

        .action-icons {
            display: flex;
            gap: 10px;
        }



        .btn-download {
            background-color: #000000;
            color: white;
            border: none;
            padding: 10px 20px;
            margin: 10px 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

            .btn-download:hover {
                background-color: #36454F;
            }

        .header-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }

            .header-container .form-control {
                width: 200px;
            }

        .button-container {
            display: flex;
            gap: 10px;
        }
    </style>
</head>

<body>
    <main class="manage-books-main">
        <div class="container">
            <div class="content">
                <h1>Manage Books</h1>

                @if (TempData["msg"] != null)
                {
                    <div class="alert alert-info">
                        @TempData["msg"]
                    </div>
                }

                <div class="table-container">
                    <div class="header-container">
                        <input type="text" id="searchInput" class="form-control" placeholder="Search books..." onkeyup="searchTable()" />
                        <div class="button-container">
                            <button class="btn-download" onclick="downloadCSV()">Download CSV Report</button>
                            <button class="btn-download" onclick="downloadPDF()">Download PDF Report</button>
                        </div>
                    </div>
                    <table id="booksTable" class="modernTable">
                        <thead>
                            <tr>
                                <th class="sortable" style="width:100px" onclick="sortTable(0)">Title</th>
                                <th class="sortable" style="width:70px" onclick="sortTable(1)">Author</th>
                                <th class="sortable" style="width:20px" onclick="sortTable(2)">ISBN</th>
                                <th class="sortable" style="width:50px" onclick="sortTable(3)">Publisher</th>
                                <th class="sortable" style="width:15px" onclick="sortTable(4)">Published Year</th>
                                <th class="sortable" style="width:20px" onclick="sortTable(5)">Price</th>
                                <th class="sortable" style="width:10px" onclick="sortTable(6)">Quantity</th>
                                <th class="sortable" style="width:10px" onclick="sortTable(7)">Rating</th>
                                <th style="width:50px">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var book in Model.Books)
                            {
                                <tr>
                                    <td>@book.Title</td>
                                    <td>@book.Author</td>
                                    <td>@book.ISBN</td>
                                    <td>@book.Publisher</td>
                                    <td>@book.PublishedYear</td>
                                    <td>@book.Price</td>
                                    <td>@book.Quantity</td>
                                    <td>@(book.AverageRating.HasValue ? book.AverageRating.Value.ToString() : "Unrated")</td>
                                    <td class="action-icons">
                                        <a asp-action="UpdateBook" asp-route-id="@book.Id" class="btn btn-primary">
                                            <span class="icon">&#9998;</span>
                                        </a>
                                        <a asp-action="DeleteBook" asp-route-id="@book.Id" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this book?');">
                                            <span class="icon">&#10060;</span>
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <script src="~/lib/jquery/dist/jquery.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.3.1/jspdf.umd.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.13/jspdf.plugin.autotable.min.js"></script>
        <script>
            function sortTable(columnIndex) {
                var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
                table = document.getElementById("booksTable");
                switching = true;
                dir = "asc";
                while (switching) {
                    switching = false;
                    rows = table.rows;
                    for (i = 1; i < (rows.length - 1); i++) {
                        shouldSwitch = false;
                        x = rows[i].getElementsByTagName("TD")[columnIndex];
                        y = rows[i + 1].getElementsByTagName("TD")[columnIndex];
                        if (dir == "asc") {
                            if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                                shouldSwitch = true;
                                break;
                            }
                        } else if (dir == "desc") {
                            if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                                shouldSwitch = true;
                                break;
                            }
                        }
                    }
                    if (shouldSwitch) {
                        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                        switching = true;
                        switchcount++;
                    } else {
                        if (switchcount == 0 && dir == "asc") {
                            dir = "desc";
                            switching = true;
                        }
                    }
                }
                updateSortingArrows(columnIndex, dir);
            }

            function updateSortingArrows(columnIndex, dir) {
                var headers = document.querySelectorAll("th.sortable");
                headers.forEach(function (header, index) {
                    header.classList.remove("desc");
                    if (index === columnIndex) {
                        if (dir === "desc") {
                            header.classList.add("desc");
                        }
                    }
                });
            }

            function searchTable() {
                var input, filter, table, tr, td, i, j, txtValue;
                input = document.getElementById("searchInput");
                filter = input.value.toLowerCase();
                table = document.getElementById("booksTable");
                tr = table.getElementsByTagName("tr");

                for (i = 1; i < tr.length; i++) {
                    tr[i].style.display = "none";
                    td = tr[i].getElementsByTagName("td");
                    for (j = 0; j < td.length; j++) {
                        if (td[j]) {
                            txtValue = td[j].textContent || td[j].innerText;
                            if (txtValue.toLowerCase().indexOf(filter) > -1) {
                                tr[i].style.display = "";
                                break;
                            }
                        }
                    }
                }
            }

            function downloadCSV() {
                var csv = [];
                var rows = document.querySelectorAll("#booksTable tr");
                for (var i = 0; i < rows.length; i++) {
                    if (rows[i].style.display !== "none") {
                        var row = [], cols = rows[i].querySelectorAll("td, th");
                        if (i == 0 || cols.length == 8) { // Ensure correct number of columns are exported
                            for (var j = 0; j < cols.length; j++) {
                                row.push(cols[j].innerText);
                            }
                            csv.push(row.join(","));
                        }
                    }
                }

                var csvContent = "data:text/csv;charset=utf-8," + csv.join("\n");
                var encodedUri = encodeURI(csvContent);
                var link = document.createElement("a");
                link.setAttribute("href", encodedUri);
                link.setAttribute("download", "books_report.csv");
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            }

            async function downloadPDF() {
                const { jsPDF } = window.jspdf;
                var doc = new jsPDF();
                var rows = document.querySelectorAll("#booksTable tr");
                var head = [], body = [];

                rows.forEach((row, index) => {
                    if (row.style.display !== "none") {
                        var cols = row.querySelectorAll("td, th");
                        var rowData = [];
                        cols.forEach((col, colIndex) => {
                            if (colIndex < 8) { // Ensure correct number of columns are exported
                                rowData.push(col.innerText);
                            }
                        });
                        if (index === 0) {
                            head.push(rowData);
                        } else {
                            body.push(rowData);
                        }
                    }
                });

                doc.autoTable({
                    head: head,
                    body: body,
                    theme: 'striped',
                    headStyles: {
                        fillColor: [40, 40, 40]
                    },
                    styles: {
                        halign: 'center'
                    }
                });

                doc.save('books_report.pdf');
            }
        </script>
    </main>
</body>

</html>